let router = require('express').Router();
var userController = require('./UserController');

/**
 * @swagger
 * /users:
 *  post:
 *      description: Create a user
 *      parameters:
 *          - in: body
 *            required: true
 *            schema:
 *              type: object
 *              required: 
 *                  - userName
 *                  - email
 *                  - oAuthId
 *              properties:
 *                  userName:
 *                      type: string
 *                  email:
 *                      type: string
 *                  oAuthId:
 *                      type: object
 *                      description: oAuthId generated by Google
 *                  dateCreated:
 *                      type: string
 *                  languages:
 *                      type: array
 *                      items:
 *                          type: string
 *      responses:
 *          '200':
 *              description: Successful response
 *          '422':
 *              description: Missing arguments
 *          '401':
 *              description: Unauthorized request
 *          '409':
 *              description: userName or email already exists
 *          '500':
 *              description: Server error
 */
router.route('/')
    .post(userController.create);
/**
 * @swagger
 * /users:
 *  get:
 *      description: List all users
 *      responses:
 *          '200':
 *              description: Successful response
 *          '500':
 *              description: Server error
 */
router.route('/')
    .get(userController.index);
/**
 * @swagger
 * /users/{user_id}:
 *  get:
 *      description: Retrieve a user
 *      parameters:
 *          - in: path
 *            name: user_id
 *            required: true
 *      responses:
 *          '200':
 *              description: Successful response
 *          '500':
 *              description: Server error
 */
router.route('/:user_id')
    .get(userController.view);
/**
 * @swagger
 * /users/{user_id}:
 *  put:
 *      description: Update a user
 *      parameters:
 *          - in: path
 *            name: user_id
 *            required: true
 *          - in: body
 *            required: true
 *            schema:
 *              type: object
 *              required:
 *                  - oAuthId
 *              properties:
 *                  userName:
 *                      type: string
 *                  email:
 *                      type: string
 *                  languages:
 *                      type: array
 *                      items:
 *                          type: string
 *                  oAuthId:
 *                      type: object
 *                      description: oAuthId generated by Google
 *      responses:
 *          '200':
 *              description: Successful response
 *          '422':
 *              description: Missing arguments
 *          '401':
 *              description: Unauthorized request
 *          '500':
 *              description: Server error
 */
router.route('/:user_id')
    .put(userController.update)

module.exports = router;